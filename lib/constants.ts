export const PDF_PROCESSING = {
    MAX_TEXT_LENGTH: 10000,
    WORKER_SRC: 'https://cdn.jsdelivr.net/npm/pdfjs-dist@5.3.93/build/pdf.worker.min.mjs',
}


// https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-flash:generateContent

export const API = {
    GEMINI_ENDPOINT: 'https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent',
}

// ========================================================================
// CONFIGURACI√ìN DEL SISTEMA DE RATE LIMITING
// ========================================================================
// Estos valores controlan qu√© tan estricto ser√° el control de peticiones
// Aj√∫stalos seg√∫n el tipo de API y recursos disponibles

export const RATE_LIMIT = {
  /**
   * REQUESTS_PER_MINUTE: N√∫mero m√°ximo de peticiones que una IP puede hacer por minuto
   * 
   * ¬øC√≥mo elegir el valor?
   * - APIs costosas (OpenAI, Claude): 5-10 peticiones/min
   * - APIs normales (CRUD b√°sico): 60-100 peticiones/min  
   * - APIs muy simples (health check): 200+ peticiones/min
   * 
   * Valor actual: 5 peticiones/min
   * ‚úÖ Bueno para: APIs de IA, procesamiento pesado, APIs externas costosas
   * ‚ö†Ô∏è  Quiz√°s bajo para: Aplicaciones con mucha interacci√≥n del usuario
   */
  REQUESTS_PER_MINUTE: 5,

  /**
   * CACHE_MAX_SIZE: Cu√°ntas IPs diferentes recordamos simult√°neamente
   * 
   * ¬øQu√© pasa cuando se llena?
   * - Las IPs menos usadas se eliminan autom√°ticamente (LRU = Least Recently Used)
   * - Solo afecta el rendimiento si tienes MUCHOS usuarios √∫nicos por minuto
   * 
   * Gu√≠a de dimensionamiento:
   * - 100 IPs = ~400KB memoria (muy peque√±o)
   * - 1,000 IPs = ~4MB memoria (aplicaciones medianas)  
   * - 10,000 IPs = ~40MB memoria (aplicaciones grandes)
   * 
   * Valor actual: 1000 IPs
   * ‚úÖ Adecuado para: La mayor√≠a de aplicaciones (hasta ~1K usuarios √∫nicos/hora)
   */
  CACHE_MAX_SIZE: 1000,

  /**
   * CACHE_TTL_MS: Cada cu√°nto tiempo se resetea el contador de peticiones
   * 
   * ¬øC√≥mo funciona?
   * - Una IP hace 5 peticiones -> se bloquea
   * - Despu√©s de TTL_MS milisegundos -> su contador vuelve a 0
   * - Puede hacer peticiones de nuevo
   * 
   * Conversiones √∫tiles:
   * - 30 * 1000 = 30 segundos
   * - 60 * 1000 = 1 minuto
   * - 5 * 60 * 1000 = 5 minutos
   * - 60 * 60 * 1000 = 1 hora
   * 
   * Valor actual: 60,000ms = 1 minuto
   * ‚úÖ Coincide con REQUESTS_PER_MINUTE (5 peticiones por minuto)
   * ‚ö†Ô∏è  Importante: TTL deber√≠a coincidir con el per√≠odo de "PER_MINUTE"
   */
  CACHE_TTL_MS: 60 * 1000,
}

// ========================================================================
// EJEMPLOS DE CONFIGURACIONES T√çPICAS:
// ========================================================================
//
// ü§ñ API DE IA (OpenAI/Claude):
// REQUESTS_PER_MINUTE: 10, CACHE_TTL_MS: 60 * 1000
//
// üìä API de datos (consultas DB):  
// REQUESTS_PER_MINUTE: 50, CACHE_TTL_MS: 60 * 1000
//
// üöÄ API simple (validaciones):
// REQUESTS_PER_MINUTE: 200, CACHE_TTL_MS: 60 * 1000
//
// üõ°Ô∏è API muy restrictiva (recursos caros):
// REQUESTS_PER_MINUTE: 3, CACHE_TTL_MS: 5 * 60 * 1000 (5 min)
//
// ========================================================================
// MONITOREO RECOMENDADO:
// ========================================================================
// 
// üìà M√©tricas a seguir:
// - Cu√°ntas peticiones se bloquean por d√≠a/hora
// - Qu√© IPs se bloquean m√°s frecuentemente
// - Si los usuarios leg√≠timos se ven afectados
//
// üîß Ajustes din√°micos:
// - Aumenta REQUESTS_PER_MINUTE si muchos usuarios se quejan
// - Dismin√∫yelo si el servidor se sobrecarga
// - Considera diferentes l√≠mites para diferentes endpoints